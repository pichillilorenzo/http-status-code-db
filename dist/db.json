{"100":{"code":100,"reasonPhrase":"Continue","description":"The HTTP 100 Continue informational status response code indicates that everything so far is OK and that the client should continue with the request or ignore it if it is already finished. To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request and receive a 100 Continue status code in response before sending the body.","syntax":"100 Continue","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/100","examples":["100 Continue"],"specifications":[{"name":"HTTP Semantics # status.100","link":"https://httpwg.org/specs/rfc9110.html#status.100"},{"name":"RFC9110, Section 15.2.1","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"101":{"code":101,"reasonPhrase":"Switching Protocols","description":"The HTTP 101 Switching Protocols response code indicates a protocol to which the server switches. The protocol is specified in the Upgrade request header received from a client. The server includes in this response an Upgrade response header to indicate the protocol it switched to. The process is described in the following article: Protocol upgrade mechanism.","syntax":"101 Switching Protocols","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/101","examples":["HTTP/1.1 101 Switching Protocols\nUpgrade: websocket\nConnection: Upgrade","101 Switching Protocols"],"specifications":[{"name":"HTTP Semantics # status.101","link":"https://httpwg.org/specs/rfc9110.html#status.101"},{"name":"RFC9110, Section 15.2.2","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"102":{"code":102,"reasonPhrase":"Processing","description":"102 Processing","syntax":"102 Processing","link":"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml","examples":["102 Processing"],"specifications":[{"name":"RFC2518","link":"https://www.iana.org/go/rfc2518"}],"browserCompatibility":[]},"103":{"code":103,"reasonPhrase":"Early Hints","description":"Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production. The HTTP 103 Early Hints information response status code is primarily intended to be used with the Link header to allow the user agent to start preloading resources while the server is still preparing a response.","syntax":"103 Early Hints","experimental":"Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/103","examples":["103 Early Hints"],"specifications":[{"name":"HTML Standard # early-hints","link":"https://html.spec.whatwg.org/multipage/semantics.html#early-hints"},{"name":"RFC8297","link":"https://www.iana.org/go/rfc8297"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"103"},{"name":"Edge","supported":false,"version":"No"},{"name":"Firefox","supported":false,"version":"No"},{"name":"Opera","supported":false,"version":"No"},{"name":"Safari","supported":false,"version":"No"},{"name":"Chrome Android","supported":true,"version":"103"},{"name":"Firefox for Android","version":"?"},{"name":"Opera Android","version":"?"},{"name":"Safari on iOS","version":"?"},{"name":"Samsung Internet","version":"?"},{"name":"WebView Android","version":"?"}]},"200":{"code":200,"reasonPhrase":"OK","description":"The HTTP 200 OK success status response code indicates that the request has succeeded. A 200 response is cacheable by default. The meaning of a success depends on the HTTP request method: The successful result of a PUT or a DELETE is often not a 200 OK but a 204 No Content (or a 201 Created when the resource is uploaded for the first time).","syntax":"200 OK","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/200","examples":["200 OK"],"specifications":[{"name":"HTTP Semantics # status.200","link":"https://httpwg.org/specs/rfc9110.html#status.200"},{"name":"RFC9110, Section 15.3.1","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"201":{"code":201,"reasonPhrase":"Created","description":"The HTTP 201 Created success status response code indicates that the request has succeeded and has led to the creation of a resource. The new resource, or a description and link to the new resource, is effectively created before the response is sent back and the newly created items are returned in the body of the message, located at either the URL of the request, or at the URL in the value of the Location header. The common use case of this status code is as the result of a POST request.","syntax":"201 Created","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201","examples":["201 Created"],"specifications":[{"name":"HTTP Semantics # status.201","link":"https://httpwg.org/specs/rfc9110.html#status.201"},{"name":"RFC9110, Section 15.3.2","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"202":{"code":202,"reasonPhrase":"Accepted","description":"The HyperText Transfer Protocol (HTTP) 202 Accepted response status code indicates that the request has been accepted for processing, but the processing has not been completed; in fact, processing may not have started yet. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place. 202 is non-committal, meaning that there is no way for the HTTP to later send an asynchronous response indicating the outcome of processing the request. It is intended for cases where another process or server handles the request, or for batch processing.","syntax":"202 Accepted","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/202","examples":["202 Accepted"],"specifications":[{"name":"HTTP Semantics # status.202","link":"https://httpwg.org/specs/rfc9110.html#status.202"},{"name":"RFC9110, Section 15.3.3","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"203":{"code":203,"reasonPhrase":"Non-Authoritative Information","description":"The HTTP 203 Non-Authoritative Information response status indicates that the request was successful but the enclosed payload has been modified by a transforming proxy from that of the origin server's 200 (OK) response . The 203 response is similar to the value 214, meaning Transformation Applied, of the Warning header code, which has the additional advantage of being applicable to responses with any status code.","syntax":"203 Non-Authoritative Information","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/203","examples":["203 Non-Authoritative Information"],"specifications":[{"name":"HTTP Semantics # status.203","link":"https://httpwg.org/specs/rfc9110.html#status.203"},{"name":"RFC9110, Section 15.3.4","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"204":{"code":204,"reasonPhrase":"No Content","description":"The HTTP 204 No Content success status response code indicates that a request has succeeded, but that the client doesn't need to navigate away from its current page. This might be used, for example, when implementing \"save and continue editing\" functionality for a wiki site. In this case a PUT request would be used to save the page, and the 204 No Content response would be sent to indicate that the editor should not be replaced by some other page. A 204 response is cacheable by default (an ETag header is included in such a response).","syntax":"204 No Content","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204","examples":["204 No Content"],"specifications":[{"name":"HTTP Semantics # status.204","link":"https://httpwg.org/specs/rfc9110.html#status.204"},{"name":"RFC9110, Section 15.3.5","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"205":{"code":205,"reasonPhrase":"Reset Content","description":"The HTTP 205 Reset Content response status tells the client to reset the document view, so for example to clear the content of a form, reset a canvas state, or to refresh the UI.","syntax":"205 Reset Content","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/205","examples":["205 Reset Content"],"specifications":[{"name":"HTTP Semantics # status.205","link":"https://httpwg.org/specs/rfc9110.html#status.205"},{"name":"RFC9110, Section 15.3.6","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"206":{"code":206,"reasonPhrase":"Partial Content","description":"The HTTP 206 Partial Content success status response code indicates that the request has succeeded and the body contains the requested ranges of data, as described in the Range header of the request. If there is only one range, the Content-Type of the whole response is set to the type of the document, and a Content-Range is provided. If several ranges are sent back, the Content-Type is set to multipart/byteranges and each fragment covers one range, with Content-Range and Content-Type describing it.","syntax":"206 Partial Content","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/206","examples":["HTTP/1.1 206 Partial Content\nDate: Wed, 15 Nov 2015 06:25:24 GMT\nLast-Modified: Wed, 15 Nov 2015 04:58:08 GMT\nContent-Range: bytes 21010-47021/47022\nContent-Length: 26012\nContent-Type: image/gif\n\n# 26012 bytes of partial image data…","HTTP/1.1 206 Partial Content\nDate: Wed, 15 Nov 2015 06:25:24 GMT\nLast-Modified: Wed, 15 Nov 2015 04:58:08 GMT\nContent-Length: 1741\nContent-Type: multipart/byteranges; boundary=String_separator\n\n--String_separator\nContent-Type: application/pdf\nContent-Range: bytes 234-639/8000\n\n# the first range\n--String_separator\nContent-Type: application/pdf\nContent-Range: bytes 4590-7999/8000\n\n# the second range\n--String_separator--","206 Partial Content"],"specifications":[{"name":"HTTP Semantics # status.206","link":"https://httpwg.org/specs/rfc9110.html#status.206"},{"name":"RFC9110, Section 15.3.7","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"207":{"code":207,"reasonPhrase":"Multi-Status","description":"207 Multi-Status","syntax":"207 Multi-Status","link":"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml","examples":["207 Multi-Status"],"specifications":[{"name":"RFC4918","link":"https://www.iana.org/go/rfc4918"}],"browserCompatibility":[]},"208":{"code":208,"reasonPhrase":"Already Reported","description":"208 Already Reported","syntax":"208 Already Reported","link":"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml","examples":["208 Already Reported"],"specifications":[{"name":"RFC5842","link":"https://www.iana.org/go/rfc5842"}],"browserCompatibility":[]},"226":{"code":226,"reasonPhrase":"IM Used","description":"226 IM Used","syntax":"226 IM Used","link":"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml","examples":["226 IM Used"],"specifications":[{"name":"RFC3229","link":"https://www.iana.org/go/rfc3229"}],"browserCompatibility":[]},"300":{"code":300,"reasonPhrase":"Multiple Choices","description":"The HTTP 300 Multiple Choices redirect status response code indicates that the request has more than one possible responses. The user-agent or the user should choose one of them. As there is no standardized way of choosing one of the responses, this response code is very rarely used. If the server has a preferred choice, it should generate a Location header.","syntax":"300 Multiple Choices","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/300","examples":["300 Multiple Choices"],"specifications":[{"name":"HTTP Semantics # status.300","link":"https://httpwg.org/specs/rfc9110.html#status.300"},{"name":"RFC9110, Section 15.4.1","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"301":{"code":301,"reasonPhrase":"Moved Permanently","description":"The HyperText Transfer Protocol (HTTP) 301 Moved Permanently redirect status response code indicates that the requested resource has been definitively moved to the URL given by the Location headers. A browser redirects to the new URL and search engines update their links to the resource. Note: Although the specification requires the method and the body to remain unchanged when the redirection is performed, not all user-agents meet this requirement. Use the 301 code only as a response for GET or HEAD methods and use the 308 Permanent Redirect for POST methods instead, as the method change is explicitly prohibited with this status.","note":"Note: Although the specification requires the method and the body to remain unchanged when the redirection is performed, not all user-agents meet this requirement. Use the 301 code only as a response for GET or HEAD methods and use the 308 Permanent Redirect for POST methods instead, as the method change is explicitly prohibited with this status.","syntax":"301 Moved Permanently","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/301","examples":["301 Moved Permanently"],"specifications":[{"name":"HTTP Semantics # status.301","link":"https://httpwg.org/specs/rfc9110.html#status.301"},{"name":"RFC9110, Section 15.4.2","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"302":{"code":302,"reasonPhrase":"Found","description":"The HyperText Transfer Protocol (HTTP) 302 Found redirect status response code indicates that the resource requested has been temporarily moved to the URL given by the Location header. A browser redirects to this page but search engines don't update their links to the resource (in 'SEO-speak', it is said that the 'link-juice' is not sent to the new URL). Even if the specification requires the method (and the body) not to be altered when the redirection is performed, not all user-agents conform here - you can still find this type of bugged software out there. It is therefore recommended to set the 302 code only as a response for GET or HEAD methods and to use 307 Temporary Redirect instead, as the method change is explicitly prohibited in that case. In the cases where you want the method used to be changed to GET, use 303 See Other instead. This is useful when you want to give a response to a PUT method that is not the uploaded resource but a confirmation message such as: 'you successfully uploaded XYZ'.","syntax":"302 Found","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/302","examples":["302 Found"],"specifications":[{"name":"HTTP Semantics # status.302","link":"https://httpwg.org/specs/rfc9110.html#status.302"},{"name":"RFC9110, Section 15.4.3","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"303":{"code":303,"reasonPhrase":"See Other","description":"The HyperText Transfer Protocol (HTTP) 303 See Other redirect status response code indicates that the redirects don't link to the requested resource itself, but to another page (such as a confirmation page, a representation of a real-world object — see HTTP range-14 — or an upload-progress page). This response code is often sent back as a result of PUT or POST. The method used to display this redirected page is always GET.","syntax":"303 See Other","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/303","examples":["303 See Other"],"specifications":[{"name":"HTTP Semantics # status.303","link":"https://httpwg.org/specs/rfc9110.html#status.303"},{"name":"RFC9110, Section 15.4.4","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"304":{"code":304,"reasonPhrase":"Not Modified","description":"The HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is a safe method, such as GET or HEAD, or when the request is conditional and uses an If-None-Match or an If-Modified-Since header. The equivalent 200 OK response would have included the headers Cache-Control, Content-Location, Date, ETag, Expires, and Vary. Note: Many developer tools' network panels of browsers create extraneous requests leading to 304 responses, so that access to the local cache is visible to developers.","note":"Note: Many developer tools' network panels of browsers create extraneous requests leading to 304 responses, so that access to the local cache is visible to developers.","syntax":"304 Not Modified","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/304","examples":["304 Not Modified"],"specifications":[{"name":"HTTP Semantics # status.304","link":"https://httpwg.org/specs/rfc9110.html#status.304"},{"name":"RFC9110, Section 15.4.5","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"305":{"code":305,"reasonPhrase":"Use Proxy","description":"305 Use Proxy","syntax":"305 Use Proxy","link":"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml","examples":["305 Use Proxy"],"specifications":[{"name":"RFC9110, Section 15.4.6","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"306":{"code":306,"reasonPhrase":"","description":"306 ","syntax":"306 ","link":"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml","examples":["306 "],"specifications":[{"name":"RFC9110, Section 15.4.7","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"307":{"code":307,"reasonPhrase":"Temporary Redirect","description":"HTTP 307 Temporary Redirect redirect status response code indicates that the resource requested has been temporarily moved to the URL given by the Location headers. The method and the body of the original request are reused to perform the redirected request. In the cases where you want the method used to be changed to GET, use 303 See Other instead. This is useful when you want to give an answer to a PUT method that is not the uploaded resources, but a confirmation message (like \"You successfully uploaded XYZ\"). The only difference between 307 and 302 is that 307 guarantees that the method and the body will not be changed when the redirected request is made. With 302, some old clients were incorrectly changing the method to GET: the behavior with non-GET methods and 302 is then unpredictable on the Web, whereas the behavior with 307 is predictable. For GET requests, their behavior is identical.","syntax":"307 Temporary Redirect","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/307","examples":["307 Temporary Redirect"],"specifications":[{"name":"HTTP Semantics # status.307","link":"https://httpwg.org/specs/rfc9110.html#status.307"},{"name":"RFC9110, Section 15.4.8","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"308":{"code":308,"reasonPhrase":"Permanent Redirect","description":"The HyperText Transfer Protocol (HTTP) 308 Permanent Redirect redirect status response code indicates that the resource requested has been definitively moved to the URL given by the Location headers. A browser redirects to this page and search engines update their links to the resource (in 'SEO-speak', it is said that the 'link-juice' is sent to the new URL). The request method and the body will not be altered, whereas 301 may incorrectly sometimes be changed to a GET method. Note: Some Web applications may use the 308 Permanent Redirect in a non-standard way and for other purposes. For example, Google Drive uses a 308 Resume Incomplete response to indicate to the client when an incomplete upload stalled. (See Perform a resumable download on Google Drive documentation.)","note":"Note: Some Web applications may use the 308 Permanent Redirect in a non-standard way and for other purposes. For example, Google Drive uses a 308 Resume Incomplete response to indicate to the client when an incomplete upload stalled. (See Perform a resumable download on Google Drive documentation.)","syntax":"308 Permanent Redirect","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308","examples":["308 Permanent Redirect"],"specifications":[{"name":"HTTP Semantics # status.308","link":"https://httpwg.org/specs/rfc9110.html#status.308"},{"name":"RFC9110, Section 15.4.9","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"36"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"14"},{"name":"Opera","supported":true,"version":"24"},{"name":"Safari","supported":true,"version":"7"},{"name":"Chrome Android","supported":true,"version":"36"},{"name":"Firefox for Android","supported":true,"version":"14"},{"name":"Opera Android","supported":true,"version":"24"},{"name":"Safari on iOS","supported":true,"version":"7"},{"name":"Samsung Internet","supported":true,"version":"3.0"},{"name":"WebView Android","supported":true,"version":"37"}]},"400":{"code":400,"reasonPhrase":"Bad Request","description":"The HyperText Transfer Protocol (HTTP) 400 Bad Request response status code indicates that the server cannot or will not process the request due to something that is perceived to be a client error (for example, malformed request syntax, invalid request message framing, or deceptive request routing). Warning: The client should not repeat this request without modification.","syntax":"400 Bad Request","warning":"Warning: The client should not repeat this request without modification.","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/400","examples":["400 Bad Request"],"specifications":[{"name":"HTTP Semantics # status.400","link":"https://httpwg.org/specs/rfc9110.html#status.400"},{"name":"RFC9110, Section 15.5.1","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"401":{"code":401,"reasonPhrase":"Unauthorized","description":"The HyperText Transfer Protocol (HTTP) 401 Unauthorized response status code indicates that the client request has not been completed because it lacks valid authentication credentials for the requested resource. This status code is sent with an HTTP WWW-Authenticate response header that contains information on how the client can request for the resource again after prompting the user for authentication credentials. This status code is similar to the 403 Forbidden status code, except that in situations resulting in this status code, user authentication can allow access to the resource.","syntax":"401 Unauthorized","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401","examples":["401 Unauthorized"],"specifications":[{"name":"HTTP Semantics # status.401","link":"https://httpwg.org/specs/rfc9110.html#status.401"},{"name":"RFC9110, Section 15.5.2","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"402":{"code":402,"reasonPhrase":"Payment Required","description":"Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production. The HTTP 402 Payment Required is a nonstandard response status code that is reserved for future use. This status code was created to enable digital cash or (micro) payment systems and would indicate that the requested content is not available until the client makes a payment. Sometimes, this status code indicates that the request cannot be processed until the client makes a payment. However, no standard use convention exists and different entities use it in different contexts.","syntax":"402 Payment Required","experimental":"Experimental: This is an experimental technologyCheck the Browser compatibility table carefully before using this in production.","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/402","examples":["402 Payment Required"],"specifications":[{"name":"HTTP Semantics # status.402","link":"https://httpwg.org/specs/rfc9110.html#status.402"},{"name":"RFC9110, Section 15.5.3","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"403":{"code":403,"reasonPhrase":"Forbidden","description":"The HTTP 403 Forbidden response status code indicates that the server understands the request but refuses to authorize it. This status is similar to 401, but for the 403 Forbidden status code re-authenticating makes no difference. The access is permanently forbidden and tied to the application logic, such as insufficient rights to a resource.","syntax":"403 Forbidden","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403","examples":["403 Forbidden"],"specifications":[{"name":"HTTP Semantics # status.403","link":"https://httpwg.org/specs/rfc9110.html#status.403"},{"name":"RFC9110, Section 15.5.4","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"404":{"code":404,"reasonPhrase":"Not Found","description":"The HTTP 404 Not Found response status code indicates that the server cannot find the requested resource. Links that lead to a 404 page are often called broken or dead links and can be subject to link rot. A 404 status code only indicates that the resource is missing: not whether the absence is temporary or permanent. If a resource is permanently removed, use the 410 (Gone) status instead.","syntax":"404 Not Found","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404","examples":["404 Not Found"],"specifications":[{"name":"HTTP Semantics # status.404","link":"https://httpwg.org/specs/rfc9110.html#status.404"},{"name":"RFC9110, Section 15.5.5","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"405":{"code":405,"reasonPhrase":"Method Not Allowed","description":"The HyperText Transfer Protocol (HTTP) 405 Method Not Allowed response status code indicates that the server knows the request method, but the target resource doesn't support this method. The server must generate an Allow header field in a 405 status code response. The field must contain a list of methods that the target resource currently supports.","syntax":"405 Method Not Allowed","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405","examples":["405 Method Not Allowed"],"specifications":[{"name":"HTTP Semantics # status.405","link":"https://httpwg.org/specs/rfc9110.html#status.405"},{"name":"RFC9110, Section 15.5.6","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"406":{"code":406,"reasonPhrase":"Not Acceptable","description":"The HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation. Proactive content negotiation headers include: In practice, this error is very rarely used. Instead of responding using this error code, which would be cryptic for the end user and difficult to fix, servers ignore the relevant header and serve an actual page to the user. It is assumed that even if the user won't be completely happy, they will prefer this to an error code. If a server returns such an error status, the body of the message should contain the list of the available representations of the resources, allowing the user to choose among them.","syntax":"406 Not Acceptable","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/406","examples":["406 Not Acceptable"],"specifications":[{"name":"HTTP Semantics # status.406","link":"https://httpwg.org/specs/rfc9110.html#status.406"},{"name":"RFC9110, Section 15.5.7","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"407":{"code":407,"reasonPhrase":"Proxy Authentication Required","description":"The HTTP 407 Proxy Authentication Required client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for a proxy server that is between the browser and the server that can access the requested resource. This status is sent with a Proxy-Authenticate header that contains information on how to authorize correctly.","syntax":"407 Proxy Authentication Required","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/407","examples":["407 Proxy Authentication Required"],"specifications":[{"name":"HTTP Semantics # status.407","link":"https://httpwg.org/specs/rfc9110.html#status.407"},{"name":"RFC9110, Section 15.5.8","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"408":{"code":408,"reasonPhrase":"Request Timeout","description":"The HyperText Transfer Protocol (HTTP) 408 Request Timeout response status code means that the server would like to shut down this unused connection. It is sent on an idle connection by some servers, even without any previous request by the client. A server should send the \"close\" Connection header field in the response, since 408 implies that the server has decided to close the connection rather than continue waiting. This response is used much more since some browsers, like Chrome, Firefox 27+, and IE9, use HTTP pre-connection mechanisms to speed up surfing. Note: some servers merely shut down the connection without sending this message.","note":"Note: some servers merely shut down the connection without sending this message.","syntax":"408 Request Timeout","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/408","examples":["408 Request Timeout"],"specifications":[{"name":"HTTP Semantics # status.408","link":"https://httpwg.org/specs/rfc9110.html#status.408"},{"name":"RFC9110, Section 15.5.9","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"409":{"code":409,"reasonPhrase":"Conflict","description":"The HTTP 409 Conflict response status code indicates a request conflict with the current state of the target resource. Conflicts are most likely to occur in response to a PUT request. For example, you may get a 409 response when uploading a file that is older than the existing one on the server, resulting in a version control conflict.","syntax":"409 Conflict","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409","examples":["409 Conflict"],"specifications":[{"name":"HTTP Semantics # status.409","link":"https://httpwg.org/specs/rfc9110.html#status.409"},{"name":"RFC9110, Section 15.5.10","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"410":{"code":410,"reasonPhrase":"Gone","description":"The HyperText Transfer Protocol (HTTP) 410 Gone client error response code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent. If you don't know whether this condition is temporary or permanent, a 404 status code should be used instead. Note: A 410 response is cacheable by default.","note":"Note: A 410 response is cacheable by default.","syntax":"410 Gone","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/410","examples":["410 Gone"],"specifications":[{"name":"HTTP Semantics # status.410","link":"https://httpwg.org/specs/rfc9110.html#status.410"},{"name":"RFC9110, Section 15.5.11","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"411":{"code":411,"reasonPhrase":"Length Required","description":"The HyperText Transfer Protocol (HTTP) 411 Length Required client error response code indicates that the server refuses to accept the request without a defined Content-Length header. Note: by specification, when sending data in a series of chunks, the Content-Length header is omitted and at the beginning of each chunk you need to add the length of the current chunk in hexadecimal format. See Transfer-Encoding for more details.","note":"Note: by specification, when sending data in a series of chunks, the Content-Length header is omitted and at the beginning of each chunk you need to add the length of the current chunk in hexadecimal format. See Transfer-Encoding for more details.","syntax":"411 Length Required","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/411","examples":["411 Length Required"],"specifications":[{"name":"HTTP Semantics # status.411","link":"https://httpwg.org/specs/rfc9110.html#status.411"},{"name":"RFC9110, Section 15.5.12","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"412":{"code":412,"reasonPhrase":"Precondition Failed","description":"The HyperText Transfer Protocol (HTTP) 412 Precondition Failed client error response code indicates that access to the target resource has been denied. This happens with conditional requests on methods other than GET or HEAD when the condition defined by the If-Unmodified-Since or If-None-Match headers is not fulfilled. In that case, the request, usually an upload or a modification of a resource, cannot be made and this error response is sent back.","syntax":"412 Precondition Failed","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/412","examples":["ETag: \"33a64df551425fcc55e4d42a148795d9f25f89d4\"\nETag: W/\"0815\"","412 Precondition Failed"],"specifications":[{"name":"HTTP Semantics # status.412","link":"https://httpwg.org/specs/rfc9110.html#status.412"},{"name":"RFC9110, Section 15.5.13","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"413":{"code":413,"reasonPhrase":"Payload Too Large","description":"The HTTP 413 Payload Too Large response status code indicates that the request entity is larger than limits defined by server; the server might close the connection or return a Retry-After header field.","syntax":"413 Payload Too Large","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/413","examples":["413 Content Too Large"],"specifications":[{"name":"HTTP Semantics # status.413","link":"https://httpwg.org/specs/rfc9110.html#status.413"},{"name":"RFC9110, Section 15.5.14","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"414":{"code":414,"reasonPhrase":"URI Too Long","description":"The HTTP 414 URI Too Long response status code indicates that the URI requested by the client is longer than the server is willing to interpret. There are a few rare conditions when this might occur:","syntax":"414 URI Too Long","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/414","examples":["414 URI Too Long"],"specifications":[{"name":"HTTP Semantics # status.414","link":"https://httpwg.org/specs/rfc9110.html#status.414"},{"name":"RFC9110, Section 15.5.15","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"415":{"code":415,"reasonPhrase":"Unsupported Media Type","description":"The HTTP 415 Unsupported Media Type client error response code indicates that the server refuses to accept the request because the payload format is in an unsupported format. The format problem might be due to the request's indicated Content-Type or Content-Encoding, or as a result of inspecting the data directly.","syntax":"415 Unsupported Media Type","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/415","examples":["415 Unsupported Media Type"],"specifications":[{"name":"HTTP Semantics # status.415","link":"https://httpwg.org/specs/rfc9110.html#status.415"},{"name":"RFC9110, Section 15.5.16","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"416":{"code":416,"reasonPhrase":"Range Not Satisfiable","description":"The HyperText Transfer Protocol (HTTP) 416 Range Not Satisfiable error response code indicates that a server cannot serve the requested ranges. The most likely reason is that the document doesn't contain such ranges, or that the Range header value, though syntactically correct, doesn't make sense. The 416 response message contains a Content-Range indicating an unsatisfied range (that is a '*') followed by a '/' and the current length of the resource. E.g. Content-Range: bytes */12777 Faced with this error, browsers usually either abort the operation (for example, a download will be considered as non-resumable) or ask for the whole document again.","syntax":"416 Range Not Satisfiable","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/416","examples":["416 Range Not Satisfiable"],"specifications":[{"name":"HTTP Semantics # status.416","link":"https://httpwg.org/specs/rfc9110.html#status.416"},{"name":"RFC9110, Section 15.5.17","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"417":{"code":417,"reasonPhrase":"Expectation Failed","description":"The HTTP 417 Expectation Failed client error response code indicates that the expectation given in the request's Expect header could not be met. See the Expect header for more details.","syntax":"417 Expectation Failed","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/417","examples":["417 Expectation Failed"],"specifications":[{"name":"HTTP Semantics # status.417","link":"https://httpwg.org/specs/rfc9110.html#status.417"},{"name":"RFC9110, Section 15.5.18","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"418":{"code":418,"reasonPhrase":"I'm a teapot","description":"The HTTP 418 I'm a teapot client error response code indicates that the server refuses to brew coffee because it is, permanently, a teapot. A combined coffee/tea pot that is temporarily out of coffee should instead return 503. This error is a reference to Hyper Text Coffee Pot Control Protocol defined in April Fools' jokes in 1998 and 2014. Some websites use this response for requests they do not wish to handle, such as automated queries.","syntax":"418 I'm a teapot","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/418","examples":["418 "],"specifications":[{"name":"RFC 2324 # section-2.3.2","link":"https://www.rfc-editor.org/rfc/rfc2324#section-2.3.2"},{"name":"RFC9110, Section 15.5.19","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"421":{"code":421,"reasonPhrase":"Misdirected Request","description":"421 Misdirected Request","syntax":"421 Misdirected Request","link":"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml","examples":["421 Misdirected Request"],"specifications":[{"name":"RFC9110, Section 15.5.20","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"422":{"code":422,"reasonPhrase":"Unprocessable Entity","description":"The HyperText Transfer Protocol (HTTP) 422 Unprocessable Entity response status code indicates that the server understands the content type of the request entity, and the syntax of the request entity is correct, but it was unable to process the contained instructions. Warning: The client should not repeat this request without modification.","syntax":"422 Unprocessable Entity","warning":"Warning: The client should not repeat this request without modification.","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/422","examples":["422 Unprocessable Content"],"specifications":[{"name":"HTTP Semantics # status.422","link":"https://httpwg.org/specs/rfc9110.html#status.422"},{"name":"RFC9110, Section 15.5.21","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"423":{"code":423,"reasonPhrase":"Locked","description":"423 Locked","syntax":"423 Locked","link":"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml","examples":["423 Locked"],"specifications":[{"name":"RFC4918","link":"https://www.iana.org/go/rfc4918"}],"browserCompatibility":[]},"424":{"code":424,"reasonPhrase":"Failed Dependency","description":"424 Failed Dependency","syntax":"424 Failed Dependency","link":"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml","examples":["424 Failed Dependency"],"specifications":[{"name":"RFC4918","link":"https://www.iana.org/go/rfc4918"}],"browserCompatibility":[]},"425":{"code":425,"reasonPhrase":"Too Early","description":"The HyperText Transfer Protocol (HTTP) 425 Too Early response status code indicates that the server is unwilling to risk processing a request that might be replayed, which creates the potential for a replay attack.","syntax":"425 Too Early","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/425","examples":["425 Too Early"],"specifications":[{"name":"Using Early Data in HTTP # status","link":"https://httpwg.org/specs/rfc8470.html#status"},{"name":"RFC8470","link":"https://www.iana.org/go/rfc8470"}],"browserCompatibility":[{"name":"Chrome","version":"?"},{"name":"Edge","version":"?"},{"name":"Firefox","supported":true,"version":"58"},{"name":"Opera","version":"?"},{"name":"Safari","version":"?"},{"name":"Chrome Android","version":"?"},{"name":"Firefox for Android","supported":true,"version":"58"},{"name":"Opera Android","version":"?"},{"name":"Safari on iOS","version":"?"},{"name":"Samsung Internet","version":"?"},{"name":"WebView Android","version":"?"}]},"426":{"code":426,"reasonPhrase":"Upgrade Required","description":"The HTTP 426 Upgrade Required client error response code indicates that the server refuses to perform the request using the current protocol but might be willing to do so after the client upgrades to a different protocol. The server sends an Upgrade header with this response to indicate the required protocol(s).","syntax":"426 Upgrade Required","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/426","examples":["HTTP/1.1 426 Upgrade Required\nUpgrade: HTTP/2.0\nConnection: Upgrade\nContent-Length: 53\nContent-Type: text/plain\n\nThis service requires use of the HTTP/2.0 protocol","426 Upgrade Required"],"specifications":[{"name":"HTTP Semantics # status.426","link":"https://httpwg.org/specs/rfc9110.html#status.426"},{"name":"RFC9110, Section 15.5.22","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"428":{"code":428,"reasonPhrase":"Precondition Required","description":"The HTTP 428 Precondition Required response status code indicates that the server requires the request to be conditional. Typically, this means that a required precondition header, such as If-Match, is missing. When a precondition header is not matching the server side state, the response should be 412 Precondition Failed.","syntax":"428 Precondition Required","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/428","examples":["428 Precondition Required"],"specifications":[{"name":"RFC 6585 # section-3","link":"https://www.rfc-editor.org/rfc/rfc6585#section-3"},{"name":"RFC6585","link":"https://www.iana.org/go/rfc6585"}],"browserCompatibility":[]},"429":{"code":429,"reasonPhrase":"Too Many Requests","description":"The HTTP 429 Too Many Requests response status code indicates the user has sent too many requests in a given amount of time (\"rate limiting\"). A Retry-After header might be included to this response indicating how long to wait before making a new request.","syntax":"429 Too Many Requests","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429","examples":["429 Too Many Requests"],"specifications":[{"name":"RFC 6585 # section-4","link":"https://www.rfc-editor.org/rfc/rfc6585#section-4"},{"name":"RFC6585","link":"https://www.iana.org/go/rfc6585"}],"browserCompatibility":[]},"431":{"code":431,"reasonPhrase":"Request Header Fields Too Large","description":"The HTTP 431 Request Header Fields Too Large response status code indicates that the server refuses to process the request because the request's HTTP headers are too long. The request may be resubmitted after reducing the size of the request headers. 431 can be used when the total size of request headers is too large, or when a single header field is too large. To help those running into this error, indicate which of the two is the problem in the response body — ideally, also include which headers are too large. This lets users attempt to fix the problem, such as by clearing their cookies. Servers will often produce this status if:","syntax":"431 Request Header Fields Too Large","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/431","examples":["431 Request Header Fields Too Large"],"specifications":[{"name":"RFC 6585 # section-5","link":"https://www.rfc-editor.org/rfc/rfc6585#section-5"},{"name":"RFC6585","link":"https://www.iana.org/go/rfc6585"}],"browserCompatibility":[]},"451":{"code":451,"reasonPhrase":"Unavailable For Legal Reasons","description":"The HyperText Transfer Protocol (HTTP) 451 Unavailable For Legal Reasons client error response code indicates that the user requested a resource that is not available due to legal reasons, such as a web page for which a legal action has been issued.","syntax":"451 Unavailable For Legal Reasons","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/451","examples":["451 Unavailable For Legal Reasons"],"specifications":[{"name":"An HTTP Status Code to Report Legal Obstacles # n-451-unavailable-for-legal-reasons","link":"https://httpwg.org/specs/rfc7725.html#n-451-unavailable-for-legal-reasons"},{"name":"RFC7725","link":"https://www.iana.org/go/rfc7725"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"500":{"code":500,"reasonPhrase":"Internal Server Error","description":"The HyperText Transfer Protocol (HTTP) 500 Internal Server Error server error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. This error response is a generic \"catch-all\" response. Usually, this indicates the server cannot find a better 5xx error code to response. Sometimes, server administrators log error responses like the 500 status code with more details about the request to prevent the error from happening again in the future.","syntax":"500 Internal Server Error","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500","examples":["500 Internal Server Error"],"specifications":[{"name":"HTTP Semantics # status.500","link":"https://httpwg.org/specs/rfc9110.html#status.500"},{"name":"RFC9110, Section 15.6.1","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"501":{"code":501,"reasonPhrase":"Not Implemented","description":"The HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request. This status can also send a Retry-After header, telling the requester when to check back to see if the functionality is supported by then. 501 is the appropriate response when the server does not recognize the request method and is incapable of supporting it for any resource. The only methods that servers are required to support (and therefore that must not return 501) are GET and HEAD. If the server does recognize the method, but intentionally does not support it, the appropriate response is 405 Method Not Allowed. Note:","note":"Note: A 501 error is not something you can fix, but requires a fix by the web server you are trying to access. A 501 response is cacheable by default; that is, unless caching headers instruct otherwise.","syntax":"501 Not Implemented","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501","examples":["501 Not Implemented"],"specifications":[{"name":"HTTP Semantics # status.501","link":"https://httpwg.org/specs/rfc9110.html#status.501"},{"name":"RFC9110, Section 15.6.2","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"502":{"code":502,"reasonPhrase":"Bad Gateway","description":"The HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server. Note: A Gateway might refer to different things in networking and a 502 error is usually not something you can fix, but requires a fix by the web server or the proxies you are trying to get access through.","note":"Note: A Gateway might refer to different things in networking and a 502 error is usually not something you can fix, but requires a fix by the web server or the proxies you are trying to get access through.","syntax":"502 Bad Gateway","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502","examples":["502 Bad Gateway"],"specifications":[{"name":"HTTP Semantics # status.502","link":"https://httpwg.org/specs/rfc9110.html#status.502"},{"name":"RFC9110, Section 15.6.3","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"503":{"code":503,"reasonPhrase":"Service Unavailable","description":"The HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request. Common causes are a server that is down for maintenance or that is overloaded. This response should be used for temporary conditions and the Retry-After HTTP header should, if possible, contain the estimated time for the recovery of the service. Note: together with this response, a user-friendly page explaining the problem should be sent. Caching-related headers that are sent along with this response should be taken care of, as a 503 status is often a temporary condition and responses shouldn't usually be cached.","note":"Note: together with this response, a user-friendly page explaining the problem should be sent.","syntax":"503 Service Unavailable","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503","examples":["503 Service Unavailable"],"specifications":[{"name":"HTTP Semantics # status.503","link":"https://httpwg.org/specs/rfc9110.html#status.503"},{"name":"RFC9110, Section 15.6.4","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"504":{"code":504,"reasonPhrase":"Gateway Timeout","description":"The HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request. Note: A Gateway might refer to different things in networking and a 504 error is usually not something you can fix, but requires a fix by the web server or the proxies you are trying to get access through.","note":"Note: A Gateway might refer to different things in networking and a 504 error is usually not something you can fix, but requires a fix by the web server or the proxies you are trying to get access through.","syntax":"504 Gateway Timeout","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504","examples":["504 Gateway Timeout"],"specifications":[{"name":"HTTP Semantics # status.504","link":"https://httpwg.org/specs/rfc9110.html#status.504"},{"name":"RFC9110, Section 15.6.5","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[{"name":"Chrome","supported":true,"version":"Yes"},{"name":"Edge","supported":true,"version":"12"},{"name":"Firefox","supported":true,"version":"Yes"},{"name":"Opera","supported":true,"version":"Yes"},{"name":"Safari","supported":true,"version":"Yes"},{"name":"Chrome Android","supported":true,"version":"Yes"},{"name":"Firefox for Android","supported":true,"version":"Yes"},{"name":"Opera Android","supported":true,"version":"Yes"},{"name":"Safari on iOS","supported":true,"version":"Yes"},{"name":"Samsung Internet","supported":true,"version":"Yes"},{"name":"WebView Android","supported":true,"version":"Yes"}]},"505":{"code":505,"reasonPhrase":"HTTP Version Not Supported","description":"The HyperText Transfer Protocol (HTTP) 505 HTTP Version Not Supported response status code indicates that the HTTP version used in the request is not supported by the server.","syntax":"505 HTTP Version Not Supported","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/505","examples":["505 HTTP Version Not Supported"],"specifications":[{"name":"HTTP Semantics # status.505","link":"https://httpwg.org/specs/rfc9110.html#status.505"},{"name":"RFC9110, Section 15.6.6","link":"https://www.iana.org/go/rfc9110"}],"browserCompatibility":[]},"506":{"code":506,"reasonPhrase":"Variant Also Negotiates","description":"The HyperText Transfer Protocol (HTTP) 506 Variant Also Negotiates response status code may be given in the context of Transparent Content Negotiation (see RFC 2295). This protocol enables a client to retrieve the best variant of a given resource, where the server supports multiple variants. The Variant Also Negotiates status code indicates an internal server configuration error in which the chosen variant is itself configured to engage in content negotiation, so is not a proper negotiation endpoint.","syntax":"506 Variant Also Negotiates","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/506","examples":["506 Variant Also Negotiates"],"specifications":[{"name":"RFC 2295 # section-8.1","link":"https://www.rfc-editor.org/rfc/rfc2295#section-8.1"},{"name":"RFC2295","link":"https://www.iana.org/go/rfc2295"}],"browserCompatibility":[]},"507":{"code":507,"reasonPhrase":"Insufficient Storage","description":"The HyperText Transfer Protocol (HTTP) 507 Insufficient Storage response status code may be given in the context of the Web Distributed Authoring and Versioning (WebDAV) protocol (see RFC 4918). It indicates that a method could not be performed because the server cannot store the representation needed to successfully complete the request.","syntax":"507 Insufficient Storage","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/507","examples":["507 Insufficient Storage"],"specifications":[{"name":"RFC 4918 # section-11.5","link":"https://www.rfc-editor.org/rfc/rfc4918#section-11.5"},{"name":"RFC4918","link":"https://www.iana.org/go/rfc4918"}],"browserCompatibility":[]},"508":{"code":508,"reasonPhrase":"Loop Detected","description":"The HyperText Transfer Protocol (HTTP) 508 Loop Detected response status code may be given in the context of the Web Distributed Authoring and Versioning (WebDAV) protocol. It indicates that the server terminated an operation because it encountered an infinite loop while processing a request with \"Depth: infinity\". This status indicates that the entire operation failed.","syntax":"508 Loop Detected","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/508","examples":["508 Loop Detected"],"specifications":[{"name":"RFC 5842 # section-7.2","link":"https://www.rfc-editor.org/rfc/rfc5842#section-7.2"},{"name":"RFC5842","link":"https://www.iana.org/go/rfc5842"}],"browserCompatibility":[]},"510":{"code":510,"reasonPhrase":"Not Extended","description":"The HyperText Transfer Protocol (HTTP) 510 Not Extended response status code is sent in the context of the HTTP Extension Framework, defined in RFC 2774. In that specification a client may send a request that contains an extension declaration, that describes the extension to be used. If the server receives such a request, but any described extensions are not supported for the request, then the server responds with the 510 status code.","syntax":"510 Not Extended","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/510","examples":["510 Not Extended"],"specifications":[{"name":"RFC 2774 # section-7","link":"https://www.rfc-editor.org/rfc/rfc2774#section-7"},{"name":"RFC2774","link":"https://www.iana.org/go/rfc2774"},{"name":"status-change-http-experiments-to-historic","link":"https://datatracker.ietf.org/doc/status-change-http-experiments-to-historic"}],"browserCompatibility":[]},"511":{"code":511,"reasonPhrase":"Network Authentication Required","description":"The HTTP 511 Network Authentication Required response status code indicates that the client needs to authenticate to gain network access. This status is not generated by origin servers, but by intercepting proxies that control access to the network. Network operators sometimes require some authentication, acceptance of terms, or other user interaction before granting access (for example in an internet café or at an airport). They often identify clients who have not done so using their Media Access Control (MAC) addresses.","syntax":"511 Network Authentication Required","link":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/511","examples":["511 Network Authentication Required"],"specifications":[{"name":"RFC 6585 # section-6","link":"https://www.rfc-editor.org/rfc/rfc6585#section-6"},{"name":"RFC6585","link":"https://www.iana.org/go/rfc6585"}],"browserCompatibility":[]}}